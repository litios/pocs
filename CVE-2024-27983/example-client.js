const http2 = require('http2');
const fs = require('fs');

// Create a client session
const client = http2.connect('http://localhost:8444');

// Handle errors
client.on('error', (err) => console.error(err));

// Create a POST request
const req = client.request({
  ':method': 'POST',
  ':path': '/',
});

// Prepare the payload (200 'A' characters)
const payload = Buffer.from('A'.repeat(16384 * 50));

// Send the payload
req.write(payload);

// Handle the response
req.on('response', (headers, flags) => {
  let data = '';

  // Collect response data
  req.on('data', (chunk) => {
    data += chunk;
  });

  // Log the response data
  req.on('end', () => {
    console.log('Response:', data);
  });
});


function sleep(ms) {
  return new Promise((resolve) => {
    setTimeout(resolve, ms);
  });
}

async function init() {
  await sleep(5000);
  // Create a POST request
  const req2 = client.request({
    ':method': 'POST',
    ':path': '/',
  });

  // Prepare the payload (200 'A' characters)
  const payload2 = Buffer.from('A'.repeat(16384 * 10));

  // Send the payload
  req2.write(payload2);

  // Handle the response
  req2.on('response', (headers, flags) => {
    let data = '';

    // Collect response data
    req2.on('data', (chunk) => {
      data += chunk;
    });

    // Log the response data
    req2.on('end', () => {
      console.log('Response:', data);
      client.close();
    });
  });


  req2.write(payload);
  req2.end();
}

init();
// End the request
req.end();
